!function(){"use strict";function a(a){a.when("/new",{templateUrl:"createreservation.html",controller:"Newcontroller",controllerAs:"nc"}).when("/modify",{templateUrl:"modifyreservation.html",controller:"Modifycontroller",controllerAs:"mc"}).when("/login",{templateUrl:"ownerlogin.html",controller:"Ownercontroller",controllerAs:"oc"}).otherwise({redirectTo:"/new"})}angular.module("eateryApp",["ngRoute","ngMessages"]).config(a)}(),function(){"use strict";function a(a){function b(){g.promise=a.check(g.code),g.promise.then(function(a){g.res=a.payLoad,g.old=g.res,null==g.res?g.error=!0:g.success=!0,console.log(g.res)},function(a){console.log("error",a)})}function c(){g.promise=a.del(g.res),g.promise.then(function(a){g.deleted=!0,console.log("Your record is deleted")},function(a){console.dir("Your record is not deleted")})}function d(){g.res.reserveDate=g.ndate,g.res.reserveTime=g.ntime,g.res.partySize=g.partysize,g.promise=a.update(g.res),g.promise.then(function(b){g.wait=a.wait,g.confirm=a.confirm,console.dir(g.wait),console.dir(g.confirm),g.res=b.payLoad,g.code=b.payLoad.confirmcode},function(a){console.log("Your record is not updated")})}function e(){"d"===g.option?g.del():g.mod()}function f(){"no"==g.option&&(g.promise=a.del(g.res),g.promise.then(function(a){console.log("Your record is deleted")},function(a){console.dir("Your record is not deleted")}))}var g=this;g.check=b,g.del=c,g.mod=d,g.choose=e,g.ok=f}angular.module("eateryApp").controller("Modifycontroller",a),a.$inject=["ModifyReservationService"]}(),function(){"use strict";function a(a){function b(){d.promise=a.create(d.res),d.promise.then(function(b){d.wait=a.wait,d.confirm=a.confirm,d.res=b.payLoad,d.code=b.payLoad.confirmcode},function(a){console.dir("ERROR"),console.dir(a)})}function c(){"no"==d.option&&(d.promise=a.del(d.res),d.promise.then(function(a){console.log("Your record is deleted")},function(a){console.dir("Your record is not deleted")}))}var d=this;d.create=b,d.ok=c}angular.module("eateryApp").controller("Newcontroller",a),a.$inject=["NewReservationService"]}(),function(){"use strict";function a(a,b){function c(){var c=a.login(d.cred);c.then(function(c){d.success=a.success,d.success&&(console.log("You are about to login"),b.open("eateryowner.html"))},function(a){console.log(a)})}var d=this;d.login=c,d.success=!1}angular.module("eateryApp").controller("Ownercontroller",a),a.$inject=["OwnerService","$window"]}(),function(){"use strict";function a(a,b){var c=this;return c.wait=!1,c.confirm=!1,c.check=function(c){var d=b.defer(),e={method:"GET",url:"eatery/reserve/check/"+c};return a(e).success(function(a,b,c,e){d.resolve(a)}).error(function(a,b,c,e){d.reject(a)}),d.promise},c.del=function(c){var d=b.defer(),e={method:"POST",url:"eatery/reserve/delete",data:c};return a(e).success(function(a,b,c,e){console.log("SUCCESSFULLY DELETED"),console.dir(a),d.resolve(a)}).error(function(a,b,c,e){console.log("FAILURE"),d.reject(a)}),d.promise},c.update=function(d){var e=b.defer(),f={method:"POST",url:"eatery/reserve/modify",data:d};return a(f).success(function(a,b,d,f){"C"==a.payLoad.reservestatus?(console.log("UPDATED : CONFIRMED"),c.confirm=!0,e.resolve(a)):(console.log("UPDATED : Waiting"),c.wait=!0,e.resolve(a))}).error(function(a,b,c,d){console.log("FAILURE IN MODIFICATION"),e.reject(a)}),e.promise},c}angular.module("eateryApp").service("ModifyReservationService",a),a.$inject=["$http","$q"]}(),function(){"use strict";function a(a,b){var c=this;return c.create=function(d){var e=b.defer(),f={method:"POST",url:"eatery/reserve/create",data:d};return a(f).success(function(a,b,d,f){"C"==a.payLoad.reservestatus?(c.confirm=!0,e.resolve(a)):(c.wait=!0,e.resolve(a))}).error(function(a,b,c,d){e.reject(a)}),e.promise},c.del=function(c){var d=b.defer(),e={method:"POST",url:"eatery/reserve/delete",data:c};return a(e).success(function(a,b,c,e){console.log("SUCCESSFULLY DELETED"),console.dir(a),d.resolve(a)}).error(function(a,b,c,e){console.log("FAILURE"),d.reject(a)}),d.promise},c}angular.module("eateryApp").service("NewReservationService",a),a.$inject=["$http","$q"]}(),function(){function a(a,b){var c=this;c.success=!1,c.failed=!1,c.login=function(d){var e=b.defer(),f={method:"GET",url:"head/owner/isvalid/"+d.email+"/"+d.password};return a(f).success(function(a,b,d,f){"confirm"==a.status?c.success=!0:c.success=!1,e.resolve(a),console.log(a)}).error(function(a,b,d,f){c.failed=!1,e.reject(a)}),e.promise}}angular.module("eateryApp").service("OwnerService",a),a.$inject=["$http","$q"]}(),function(){"use strict";function a(a){function b(){c.promise=a.get(c.searchstr),c.promise.then(function(a){console.dir(a.payLoad),c.cus=a.payLoad,console.dir(c.cus)},function(a){console.dir(a)})}var c=this;c.get=b}angular.module("eateryApp").controller("CustomerDetail",a),a.$inject=["CustomerService"]}(),function(){"use strict";function a(a){a.when("/view",{templateUrl:"viewreservation.html",controller:"ViewReservation",controllerAs:"vr"}).when("/seatingarea",{templateUrl:"viewseatingarea.html",controller:"seatingarea",controllerAs:"vsa"}).when("/new",{templateUrl:"createreservation.html",controller:"Newcontroller",controllerAs:"nc"}).when("/edit",{templateUrl:"modifyreservation.html",controller:"Modifycontroller",controllerAs:"mc"}).when("/profile",{templateUrl:"profile.html",controller:"Profilecontroller",controllerAs:"pc"}).when("/customer",{templateUrl:"viewcontact.html",controller:"CustomerDetail",controllerAs:"cd"}).otherwise({redirectTo:"/view"})}angular.module("eateryApp",["ngRoute","ngMessages"]).config(a)}(),function(){"use strict";function a(a,b){function c(){f.promise=a.getDetails(),f.promise.then(function(a){console.dir(a),f.profile=a.payLoad},function(a){console.dir(a)})}function d(){f.promise=a.update(f.profile),f.promise.then(function(a){console.log("UPDATED"),console.dir(a),f.profile=a.payLoad},function(a){console.dir(a)})}function e(){f.profile.opendate=f.open,f.profile.opentime=f.open,f.profile.closedate=f.close,f.profile.closetime=f.close,f.promise=a.updateSettings(f.profile),f.promise.then(function(a){console.log(a),console.log("Updated")},function(a){console.log(a)})}var f=this;f.modify=!1,f.getInfo=c,f.getInfo(),f.updateOpen=e,f.modify=d}angular.module("eateryApp").controller("Profilecontroller",a),a.$inject=["ProfileService","$filter"]}(),function(){function a(a,b,c){function d(){e.promise=a.getAllReserve(),e.promise.then(function(a){e.reserve=a.payLoad},function(a){console.log(a)})}var e=this;e.reserve=[],e.assigned=!1,e.allreservations=d,e.config={itemsPerPage:5,fillLastPage:!0},e.allreservations(),e.tableList=function(b){console.log("DATE IS ",b),e.promise=a.getUnreserved(b),e.promise.then(function(a){e.tableNo=a.payLoad,console.log(e.tableNo)},function(a){console.log(a)})},e.assignTable=function(){e.selected.tableNo=e.selectedTable,e.promise=a.assignTable(e.selected),e.promise.then(function(a){e.assigned=!0,console.log(e.tableNo)},function(a){console.log(a)})}}angular.module("eateryApp").controller("ViewReservation",a),a.$inject=["ViewReservationService","$q"]}(),function(){"use strict";function a(a){function b(){c.promise=a.getDetails(),c.promise.then(function(a){c.details=a.payLoad,console.log(a)},function(a){console.log(a)})}var c=this;c.details=[],c.seatingDetails=b,c.seatingDetails()}angular.module("eateryApp").controller("seatingarea",a),a.$inject=["seatingareaservice"]}(),function(){"use strict";function a(a,b){function c(c){var d=b.defer(),e={method:"GET",url:"eatery/reserve/customer/"+c};return a(e).success(function(a,b,c,e){d.resolve(a)}).error(function(a,b,c,e){d.reject(a)}),d.promise}var d=this;d.get=c}angular.module("eateryApp").service("CustomerService",a),a.$inject=["$http","$q"]}(),function(){"use strict";function a(a,b){function c(){var c=a.defer(),d={method:"GET",url:"restaurant/fetch/details"};return b(d).success(function(a,b,d,e){c.resolve(a)}).error(function(a,b,d,e){c.reject(a)}),c.promise}function d(c){var d=a.defer(),e={method:"POST",url:"restaurant/fetch/update",data:c};return b(e).success(function(a,b,c,e){d.resolve(a)}).error(function(a,b,c,e){d.reject(a)}),d.promise}function e(c){var d=a.defer(),e={method:"POST",url:"restaurant/fetch/updateAuto",data:c};return b(e).success(function(a,b,c,e){d.resolve(a)}).error(function(a,b,c,e){d.reject(a)}),d.promise}var f=this;f.getDetails=c,f.update=d,f.updateSettings=e}angular.module("eateryApp").service("ProfileService",a),a.$inject=["$q","$http"]}(),function(){"use strict";function a(a,b){var c=this;c.getAllReserve=function(){var c=b.defer(),d={method:"GET",url:"eatery/reserve/all"};return a(d).success(function(a,b,d,e){console.log("SUCCESSFULLY FETCHED ALL RECORDS"),console.dir(a),c.resolve(a)}).error(function(a,b,d,e){console.log("FAILURE TO FETCH ALL RECORDS"),c.reject(a)}),c.promise},c.getUnreserved=function(c){var d=b.defer(),e={method:"GET",url:"eatery/reserve/tables/"+c};return a(e).success(function(a,b,c,e){console.log("SUCCESSFULLY FETCHED ALL RECORDS"),console.dir(a),d.resolve(a)}).error(function(a,b,c,e){console.log("FAILURE TO FETCH ALL RECORDS"),d.reject(a)}),d.promise},c.assignTable=function(c){var d=b.defer(),e={method:"POST",url:"eatery/reserve/update/table",data:c};return a(e).success(function(a,b,c,e){console.log("SUCCESSFULLY FETCHED ALL RECORDS"),console.dir(a),d.resolve(a)}).error(function(a,b,c,e){console.log("FAILURE TO FETCH ALL RECORDS"),d.reject(a)}),d.promise}}angular.module("eateryApp").service("ViewReservationService",a),a.$inject=["$http","$q"]}(),function(){"use strict";function a(a,b){var c=this;c.getDetails=function(){var c=a.defer(),d={method:"GET",url:"eatery/reserve/tables/all"};return b(d).success(function(a,b,d,e){console.log("SUCCESSFULLY FETCHED ALL TABLE RECORDS"),console.dir(a),c.resolve(a)}).error(function(a,b,d,e){console.log("FAILURE TO FETCH ALL RECORDS"),c.reject(a)}),c.promise}}angular.module("eateryApp").service("seatingareaservice",a),a.$inject=["$q","$http"]}();